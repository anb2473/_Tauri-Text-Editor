* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  overflow: hidden;
}

body::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgb(15, 15, 15); /* Black background layer */
  z-index: -1; /* Ensure it stays behind all other content */
}

.logo.vite:hover {
  filter: drop-shadow(0 0 1em #747bff);
}

.logo.react:hover {
  filter: drop-shadow(0 0 1em #61dafb);
}

.logo.tauri:hover {
  filter: drop-shadow(0 0 1em #24c8db);
}

:root {
  font-family: 'JetBrains Mono', monospace;
  line-height: 24px;
  font-weight: 400;

  color: rgb(0, 0, 0);
  background-color: rgb(0, 0, 0);

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

@keyframes float {
  0% {
    transform: rotate(0deg) translate(5px) rotate(0deg);
  }
  100% {
    transform: rotate(360deg) translate(5px) rotate(-360deg);
  }
}

.container {
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  text-align: left;
  height: 100vh;
  width: 100vw;
  position: fixed;
  top: 0;
  left: 0;
  overflow: hidden;
  animation: float 5s infinite linear;
}

.structure {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  position: relative;
  transition: transform 0.3s ease;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: 0.75s;
}

.row {
  display: flex;
  justify-content: center;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}

a:hover {
  color: #535bf2;
}

h1 {
  text-align: center;
  counter-increment: heading;
}

h1::before {
  content: counter(heading);
  color: #fdfdfd;
  margin-right: 30px;
}

input,
button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  color: #0f0f0f;
  background-color: #ffffff;
  transition: border-color 0.25s;
  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.2);
}

button {
  cursor: pointer;
}

button:hover {
  border-color: #396cd8;
}
button:active {
  border-color: #396cd8;
  background-color: #e8e8e8;
}

input,
button {
  outline: none;
}

#greet-input {
  margin-right: 5px;
}

@media (prefers-color-scheme: dark) {
  :root {
    color: #f6f6f6;
    background-color: #2f2f2f;
  }

  a:hover {
    color: #24c8db;
  }

  input,
  button {
    color: #ffffff;
    background-color: #0f0f0f98;
  }
  button:active {
    background-color: #0f0f0f69;
  }
}

div.glow-text {
  width: 100%;
  height: 100%;
  background: transparent;
  border: none;
  font-size: 2.5rem;
  padding: 20px;
  outline: none;
  line-height: 1.5;
  white-space: nowrap;
  color: white;
  text-align: left;
  transition: transform 0.3s ease;
  transform-origin: center;
  counter-reset: line-number
}

div.glow-text::-webkit-scrollbar {
  display: none;  /* Chrome, Safari, Opera */
}

div.glow-text:focus {
  outline: none;
}

div.glow-text:focus-within {
  transform: translateX(calc(50vw - 50%));
}

.glow-text {
  text-shadow: 0 0 10px currentColor;
  filter: brightness(1.5);
}

.base-glow-text {
  text-shadow: 0 0 10px currentColor;
  filter: brightness(1.5);
}

.line-numbers {
  display: flex;
  flex-direction: column;
  text-align: right;
  padding-right: 10px;
  font-size: 1.5rem;
  line-height: 1.5;
  user-select: none;
}

@keyframes bounce-in {
  0% {
    transform: translate(-50%, -50%) scale(0.3) rotate(-30deg); /* Start small and rotated */
    opacity: 0; /* Fully transparent */
  }
  50% {
    transform: translate(-50%, -50%) scale(1.2) rotate(15deg); /* Overshoot with a larger scale and rotation */
    opacity: 1; /* Fully visible */
  }
  70% {
    transform: translate(-50%, -50%) scale(0.9) rotate(-5deg); /* Bounce back smaller */
  }
  100% {
    transform: translate(-50%, -50%) scale(1) rotate(0deg); /* Settle into the final layout */
  }
}

#std-header {
  position: fixed; /* Ensure it stays in place */
  top: 50%; /* Center vertically */
  left: 50%; /* Center horizontally */
  transform: translate(-50%, -50%) scale(0.3) rotate(-30deg); /* Start small and rotated */
  width: 80vw; /* Set width */
  height: 600px; /* Set height */
  display: flex; /* Flexbox for child alignment */
  flex-direction: column; /* Stack children vertically */
  justify-content: center; /* Center children vertically */
  align-items: center; /* Center children horizontally */
  color: white; /* Text color */
  background-color: rgba(50, 50, 50, 0.9); /* Semi-transparent background */
  border-radius: 15px; /* Rounded corners */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4); /* Add shadow */
  z-index: 1000; /* Ensure it appears on top of other elements */
  padding: 20px; /* Add padding inside the box */
  overflow: hidden; /* Prevent content from overflowing */
  opacity: 0; /* Initially hidden */
  visibility: hidden; /* Prevent interaction when hidden */
  pointer-events: none; /* Disable interactions when hidden */
  transition: opacity 0.5s ease, transform 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55); /* Smooth transition */
}

#std-header.visible {
  opacity: 1; /* Fully visible */
  transform: translate(-50%, -50%) scale(1) rotate(0deg); /* Settle into the final layout */
  visibility: visible; /* Allow interaction */
  pointer-events: auto; /* Enable interactions when visible */
}